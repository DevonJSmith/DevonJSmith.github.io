{"version":3,"sources":["webpack:///./src/templates/tag/tag.js","webpack:///./node_modules/core-js/modules/es6.array.find.js"],"names":["pageQuery","TagPage","data","tag","pageContext","tagName","Config","tags","name","Utils","capitalize","tagPagePath","pages","tagImage","allFile","edges","find","edge","node","childImageSharp","fluid","title","description","path","resolvePageUrl","keywords","className","style","heading","cover","posts","allMarkdownRemark","$export","$find","forced","Array","P","F","callbackfn","this","arguments","length","undefined"],"mappings":"2QAgEaA,EAAS,aA2CPC,UA9FC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACXC,EADmC,EAAlBC,YACCD,IAClBE,EAAUC,IAAOC,KAAKJ,GAAKK,MAAQC,IAAMC,WAAWP,GACpDQ,EAAcL,IAAOM,MAAMT,IAC3BU,EAAWX,EAAKY,QAAQC,MAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKV,OAASL,IAAKe,KACtEC,gBAAgBC,MAEnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOhB,EACPiB,YAAW,kBAAoBjB,EAC/BkB,KAAMd,IAAMe,eAAeb,EAAaR,GACxCsB,SAAU,CAACpB,KAEb,yBAAKqB,UAAWC,IAAMC,SACpB,6BACE,4BAAKvB,IAEP,yBAAKqB,UAAWC,IAAME,OACpB,kBAAC,IAAD,CAAKT,MAAOP,MAGhB,kBAAC,IAAD,CAAUiB,MAAO5B,EAAK6B,kBAAkBhB,W,iCClC9C,IAAIiB,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,KAAE,WAAcD,GAAS,IACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/ClB,KAAM,SAAcsB,GAClB,OAAOL,EAAMM,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,IAAR,CATU","file":"component---src-templates-tag-tag-js-a3e9d0f741f51d3bf2cc.js","sourcesContent":["/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n/* App imports */\r\nimport Layout from '../../components/layout'\r\nimport SEO from '../../components/seo'\r\nimport PostList from '../../components/post-list'\r\nimport style from './tag.module.less'\r\nimport Config from '../../../config'\r\nimport Utils from '../../utils'\r\n\r\nconst TagPage = ({ data, pageContext }) => {\r\n  const tag = pageContext.tag\r\n  const tagName = Config.tags[tag].name || Utils.capitalize(tag)\r\n  const tagPagePath = Config.pages.tag\r\n  const tagImage = data.allFile.edges.find(edge => edge.node.name === tag).node\r\n    .childImageSharp.fluid\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={tagName}\r\n        description={`All post about ${tagName}`}\r\n        path={Utils.resolvePageUrl(tagPagePath, tag)}\r\n        keywords={[tagName]}\r\n      />\r\n      <div className={style.heading}>\r\n        <div>\r\n          <h1>{tagName}</h1>\r\n        </div>\r\n        <div className={style.cover}>\r\n          <Img fluid={tagImage} />\r\n        </div>\r\n      </div>\r\n      <PostList posts={data.allMarkdownRemark.edges} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTagPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    }).isRequired,\r\n    allFile: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            childImageSharp: PropTypes.shape({\r\n              fluid: PropTypes.object.isRequired,\r\n            }).isRequired,\r\n          }).isRequired,\r\n        })\r\n      ).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { tags: { in: [$tag] } }\r\n        fileAbsolutePath: { regex: \"/index.md$/\" }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            tags\r\n            excerpt\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          childImageSharp {\r\n            fluid(maxHeight: 200) {\r\n              ...GatsbyImageSharpFluid_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default TagPage\r\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n"],"sourceRoot":""}