{"version":3,"sources":["webpack:///./src/templates/archive/archive.js","webpack:///./src/components/button/button.js","webpack:///./src/components/button/index.js","webpack:///./src/components/archive-pagination/archive-pagination.js","webpack:///./src/components/archive-pagination/index.js"],"names":["query","Archive","data","pageContext","archivePage","prevPage","nextPage","lastArchivePage","title","description","path","Config","pages","archive","posts","allMarkdownRemark","edges","Button","children","to","buttonStyle","className","style","button","defaultProps","ArchivePagination","container","Utils","resolvePageUrl","buttonLeft","buttonRight"],"mappings":"0FAAA,mHAyCaA,EAAK,aA+BHC,UA7DC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACfC,EAAiCD,EAAjCC,YACFC,EAAWD,EAAc,EAAIA,EAAc,EAAI,KAC/CE,EAAWF,EAFwBD,EAApBI,gBAE4BH,EAAc,EAAI,KAEnE,OACE,kBAAC,IAAD,CAAQI,MAAM,WACZ,kBAAC,IAAD,CACEA,MAAK,kBAAoBJ,EACzBK,YAAY,YACZC,KAAMC,IAAOC,MAAMC,UAErB,kBAAC,IAAD,CAAUC,MAAOZ,EAAKa,kBAAkBC,QACxC,kBAAC,IAAD,CAAmBX,SAAUA,EAAUC,SAAUA,O,+ECjBjDW,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,IAAD,CAAMD,GAAIA,EAAIE,UAAcC,IAAMC,OAAX,IAAqBH,GACzCF,IAULD,EAAOO,aAAe,CACpBJ,YAAa,IAGAH,QCvBf,iC,yHCsCeQ,EA5BW,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACxB,yBAAKe,UAAWC,IAAMI,WACnBrB,EACC,kBAAC,IAAD,CACEc,GAAIQ,IAAMC,eAAejB,IAAOC,MAAMC,QAASR,GAC/Ce,YAAaE,IAAMO,YAEnB,kBAAC,IAAD,MACA,8CAEA,KACHvB,EACC,kBAAC,IAAD,CACEa,GAAIQ,IAAMC,eAAejB,IAAOC,MAAMC,QAASP,GAC/Cc,YAAaE,IAAMQ,aAEnB,6CACA,kBAAC,IAAD,OAEA,OC7BR","file":"component---src-templates-archive-archive-js-d5483b1c35b2c68c4406.js","sourcesContent":["/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n/* App imports */\r\nimport Layout from '../../components/layout'\r\nimport SEO from '../../components/seo'\r\nimport PostList from '../../components/post-list'\r\nimport ArchivePagination from '../../components/archive-pagination'\r\nimport Config from '../../../config'\r\n\r\nconst Archive = ({ data, pageContext }) => {\r\n  const { archivePage, lastArchivePage } = pageContext\r\n  const prevPage = archivePage > 1 ? archivePage - 1 : null\r\n  const nextPage = archivePage < lastArchivePage ? archivePage + 1 : null\r\n\r\n  return (\r\n    <Layout title=\"Archive\">\r\n      <SEO\r\n        title={`Archive | Page ${archivePage}`}\r\n        description=\"Old posts\"\r\n        path={Config.pages.archive}\r\n      />\r\n      <PostList posts={data.allMarkdownRemark.edges} />\r\n      <ArchivePagination prevPage={prevPage} nextPage={nextPage} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nArchive.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  pageContext: PropTypes.shape({\r\n    archivePage: PropTypes.number.isRequired,\r\n    lastArchivePage: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport const query = graphql`\r\n  query($postPaths: [String!]) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { path: { in: $postPaths } }\r\n        fileAbsolutePath: { regex: \"/index.md$/\" }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            path\r\n            title\r\n            tags\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            excerpt\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Archive\r\n","/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n/* App imports */\r\nimport style from './button.module.less'\r\n\r\nconst Button = ({ children, to, buttonStyle }) => (\r\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\r\n    {children}\r\n  </Link>\r\n)\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  buttonStyle: PropTypes.string,\r\n}\r\n\r\nButton.defaultProps = {\r\n  buttonStyle: '',\r\n}\r\n\r\nexport default Button\r\n","export { default } from './button.js'\r\n","/* Vendor imports */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\r\n/* App imports */\r\nimport Button from '../../components/button'\r\nimport Config from '../../../config'\r\nimport Utils from '../../utils'\r\nimport style from './archive-pagination.module.less'\r\n\r\nconst ArchivePagination = ({ prevPage, nextPage }) => (\r\n  <div className={style.container}>\r\n    {prevPage ? (\r\n      <Button\r\n        to={Utils.resolvePageUrl(Config.pages.archive, prevPage)}\r\n        buttonStyle={style.buttonLeft}\r\n      >\r\n        <FaArrowLeft />\r\n        <span>Newer posts</span>\r\n      </Button>\r\n    ) : null}\r\n    {nextPage ? (\r\n      <Button\r\n        to={Utils.resolvePageUrl(Config.pages.archive, nextPage)}\r\n        buttonStyle={style.buttonRight}\r\n      >\r\n        <span>Older posts</span>\r\n        <FaArrowRight />\r\n      </Button>\r\n    ) : null}\r\n  </div>\r\n)\r\n\r\nArchivePagination.propTypes = {\r\n  prevPage: PropTypes.number,\r\n  nextPage: PropTypes.number,\r\n}\r\n\r\nexport default ArchivePagination\r\n","export { default } from './archive-pagination.js'\r\n"],"sourceRoot":""}